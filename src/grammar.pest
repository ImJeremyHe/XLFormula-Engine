number  = @{ int ~ ("." ~ ASCII_DIGIT*)?  }
    int = { ("+" | "-")? ~ ASCII_DIGIT+ }

string_double_quote = ${ "\"" ~ str_inner_double ~ "\"" }
str_inner_double    = @{ char_double* }
char_double         = { !("\"") ~ ANY
                        | "\"" ~ ( "\"")  
                      }

string_single_quote = ${ "\'" ~ str_inner_single ~ "\'" }
str_inner_single    = @{ char_single* }
char_single         = { !("\'") ~ ANY }

string_constant     = ${ str_inner_constant }
str_inner_constant  = @{ char_constant* }
char_constant       = { "\'" ~  ("=")
                        |!("=") ~ ANY    
                      } 

operator = _{ add | subtract | multiply | divide | power 
            | concat | comparison_operator }
    add         = { "+" }
    subtract    = { "-" }
    multiply    = { "*" }
    divide      = { "/" }
    power       = { "^" }
    concat     =  { "&" }
    
comparison_operator = _{ equal | not_equal | greater_or_equal | greater 
                       | less_or_equal | less }
    equal           = { "=" }
    not_equal       = { "<>"}
    greater         = { ">" } 
    less            = { "<" }
    greater_or_equal= { ">=" }
    less_or_equal   = { "<=" }

function = _{ abs | sum | product }
    abs     = { "ABS" ~ "(" ~ expr ~ ")" }
    sum     = { "SUM" ~ "(" ~ expr ~ ("," ~ expr)*? ~ ")" }   
    product = { "PRODUCT" ~ "(" ~ expr ~ ("," ~ expr)*? ~ ")" }

logical_function = _{ or | and } 
    or      =  { "OR" ~ "(" ~ expr ~ ("," ~ expr)*? ~ ")" } 
    and      =  { "AND" ~ "(" ~ expr ~ ("," ~ expr)*? ~ ")" }
expr = { term ~ (operator ~ term)* }
term = _{ number | "(" ~ expr ~ ")" | string_double_quote 
        | string_single_quote | function | logical_function }
term_constant = _{ string_constant }
formula = _{ SOI ~ "=" ~ expr ~ EOI | SOI ~ term_constant ~ EOI }

WHITESPACE = _{ " "  }
